/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.yaship;

/**
 *
 * @author Yash
 */
public class calculator extends javax.swing.JFrame {

    /**
     * Creates new form calculator
     */
    public calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        q1 = new javax.swing.JTextField();
        q2 = new javax.swing.JTextField();
        q3 = new javax.swing.JTextField();
        q4 = new javax.swing.JTextField();
        mask = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        availableNet = new javax.swing.JLabel();
        decBoardcast = new javax.swing.JLabel();
        decNetwork = new javax.swing.JLabel();
        decMask = new javax.swing.JLabel();
        decAddress = new javax.swing.JLabel();
        binBoardcast = new javax.swing.JLabel();
        binNetwork = new javax.swing.JLabel();
        binMask = new javax.swing.JLabel();
        binAdd = new javax.swing.JLabel();
        availableHost = new javax.swing.JLabel();
        calculateBtn = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("IP");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 74, 37, -1));

        jLabel2.setText("/");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(442, 74, 8, -1));

        q1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        q1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q1ActionPerformed(evt);
            }
        });
        getContentPane().add(q1, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 71, 71, 23));

        q2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        q2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q2ActionPerformed(evt);
            }
        });
        getContentPane().add(q2, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 71, 71, 23));

        q3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(q3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 71, 71, 23));

        q4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(q4, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 71, 71, 23));

        mask.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maskActionPerformed(evt);
            }
        });
        getContentPane().add(mask, new org.netbeans.lib.awtextra.AbsoluteConstraints(462, 71, 71, 23));

        jLabel3.setText("Binary");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 119, 37, -1));

        jLabel4.setText("IP Address");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 153, 131, -1));

        jLabel5.setText("Subnet Mask");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 187, 131, -1));

        jLabel6.setText("Network Address");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 221, 131, -1));

        jLabel7.setText("Broadcast Address");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 255, 131, -1));

        jLabel8.setText("Decimal");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 289, -1, -1));

        jLabel9.setText("IP Address");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 323, 131, -1));

        jLabel10.setText("Subnet Mask");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 351, 131, -1));

        jLabel11.setText("Network Address");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 379, 131, -1));

        jLabel12.setText("Broadcast Address");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 407, 131, -1));

        jLabel13.setText("Total Number of Hosts");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 435, -1, -1));

        jLabel14.setText("Total Host Available");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 463, 131, -1));
        getContentPane().add(availableNet, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 435, 330, -1));
        getContentPane().add(decBoardcast, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 407, 330, -1));
        getContentPane().add(decNetwork, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 379, 330, -1));
        getContentPane().add(decMask, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 351, 330, -1));
        getContentPane().add(decAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 323, 330, -1));
        getContentPane().add(binBoardcast, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 255, 330, -1));
        getContentPane().add(binNetwork, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 221, 330, -1));
        getContentPane().add(binMask, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 187, 330, -1));
        getContentPane().add(binAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 153, 330, 16));
        getContentPane().add(availableHost, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 463, 330, -1));

        calculateBtn.setText("Calculate");
        calculateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        calculateBtn.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
        calculateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calculateBtnMouseClicked(evt);
            }
        });
        calculateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateBtnActionPerformed(evt);
            }
        });
        getContentPane().add(calculateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(551, 71, -1, -1));

        jLabel15.setBackground(new java.awt.Color(102, 102, 102));
        jLabel15.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 36)); // NOI18N
        jLabel15.setText("A Subnet Simulator Tool");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 6, 422, -1));

        jLabel16.setIcon(new javax.swing.ImageIcon("C:\\Users\\Yash\\Downloads\\lum3n--RBuQ2PK_L8-unsplash (1).jpg")); // NOI18N
        jLabel16.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 670, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void maskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maskActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maskActionPerformed

    private void q1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_q1ActionPerformed

    private void q2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_q2ActionPerformed

    private void calculateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calculateBtnMouseClicked
        // used form reading text from input box:
        String bq1=Integer.toBinaryString(Integer.parseInt(q1.getText()));
        String bq2=Integer.toBinaryString(Integer.parseInt(q2.getText()));
        String bq3=Integer.toBinaryString(Integer.parseInt(q3.getText()));
        String bq4=Integer.toBinaryString(Integer.parseInt(q4.getText()));
        
        //making them into 8 digit byts strings
        String ipByte1=String.format("%08d",Integer.valueOf(bq1));
        String ipByte2=String.format("%08d",Integer.valueOf(bq2));
        String ipByte3=String.format("%08d",Integer.valueOf(bq3));
        String ipByte4=String.format("%08d",Integer.valueOf(bq4));
        
        //creating inte bitMask
        int bitMask=Integer.parseInt(mask.getText());
        //make a 32bit int from whole ip address
        int ipBin=Integer.parseInt(ipByte1+ipByte2+ipByte3,2);
        
        // parseInt 31bit unsigned int limit
        ipBin=(ipBin << 8)+Integer.parseInt(ipByte4,2);
        
        //making 32bits network bin
        int maskBin=~0 << (32-bitMask);
        
        //AND operation for Network add
        int netBin=ipBin & maskBin;
        
        //OR operation for boardcast
        int bcBin=ipBin | ~maskBin;
        
        //split with period
        String strIpBin=Integer.toBinaryString(ipBin);
        strIpBin=String.format("%32s",strIpBin).replace(" ", "0");
        String[] printIpBin=strIpBin.split("(?<=\\G........)");
        String strMaskBin=Integer.toBinaryString(maskBin);
        strMaskBin=String.format("%32s",strMaskBin).replace(" ", "0");
        String[] printMaskBin=strMaskBin.split("(?<=\\G........)");
        String strNetBin=Integer.toBinaryString(netBin);
        strNetBin=String.format("%32s",strNetBin).replace(" ", "0");
        String[] printNetBin=strNetBin.split("(?<=\\G........)");
        String strBcBin=Integer.toBinaryString(bcBin);
        strBcBin=String.format("%32s",strBcBin).replace(" ", "0");
        String[] printBcBin=strBcBin.split("(?<=\\G........)");
        
        // for decimal
        decAddress.setText(
                q1.getText()+"."+
                q2.getText()+"."+
                q3.getText()+"."+
                q4.getText()
        );
        decMask.setText(
                String.valueOf(Integer.parseInt(printMaskBin[0],2))+"."+
                String.valueOf(Integer.parseInt(printMaskBin[1],2))+"."+
                String.valueOf(Integer.parseInt(printMaskBin[2],2))+"."+
                String.valueOf(Integer.parseInt(printMaskBin[3],2))
        );
        decNetwork.setText(
                String.valueOf(Integer.parseInt(printNetBin[0],2))+"."+
                String.valueOf(Integer.parseInt(printNetBin[1],2))+"."+
                String.valueOf(Integer.parseInt(printNetBin[2],2))+"."+
                String.valueOf(Integer.parseInt(printNetBin[3],2))
        );
        decBoardcast.setText(
                String.valueOf(Integer.parseInt(printBcBin[0],2))+"."+
                String.valueOf(Integer.parseInt(printBcBin[1],2))+"."+
                String.valueOf(Integer.parseInt(printBcBin[2],2))+"."+
                String.valueOf(Integer.parseInt(printBcBin[3],2))
        );
        availableHost.setText(String.valueOf(~maskBin -1));
        availableNet.setText(String.valueOf(~maskBin+1));
        
        //testing display
        binAdd.setText(printIpBin[0]+"."+printIpBin[1]+"."+printIpBin[2]+"."+printIpBin[3]);
        binMask.setText(printMaskBin[0]+"."+printMaskBin[1]+"."+printMaskBin[2]+"."+printMaskBin[3]);
        binNetwork.setText(printNetBin[0]+"."+printNetBin[1]+"."+printNetBin[2]+"."+printNetBin[3]);
        binBoardcast.setText(printBcBin[0]+"."+printBcBin[1]+"."+printBcBin[2]+"."+printBcBin[3]);
    }//GEN-LAST:event_calculateBtnMouseClicked

    private void calculateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_calculateBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new calculator().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel availableHost;
    private javax.swing.JLabel availableNet;
    private javax.swing.JLabel binAdd;
    private javax.swing.JLabel binBoardcast;
    private javax.swing.JLabel binMask;
    private javax.swing.JLabel binNetwork;
    private javax.swing.JButton calculateBtn;
    private javax.swing.JLabel decAddress;
    private javax.swing.JLabel decBoardcast;
    private javax.swing.JLabel decMask;
    private javax.swing.JLabel decNetwork;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField mask;
    private javax.swing.JTextField q1;
    private javax.swing.JTextField q2;
    private javax.swing.JTextField q3;
    private javax.swing.JTextField q4;
    // End of variables declaration//GEN-END:variables
}
